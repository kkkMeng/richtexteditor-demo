{"ast":null,"code":"var _jsxFileName = \"/Users/aladdin/Documents/richtext-editor-demo/src/views/jodit/jodit.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState, useRef, useEffect } from \"react\";\nimport JoditEditor from \"jodit-react\";\nimport { Input, Divider } from 'antd';\nimport ReactDOM from \"react-dom\"; //import {debounce} from \"./baidu\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction JoditDemo() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Hello, this is Jodit!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(JoditApp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n}\n\n_c = JoditDemo;\nconst {\n  TextArea\n} = Input;\n\nfunction JoditApp() {\n  _s();\n\n  const editor = useRef(null);\n  const [content, setContent] = useState(\"\");\n  const config = {\n    readonly: false,\n    height: 400\n  };\n  const inputTmp = useState(''); //load only once.\n\n  useEffect(() => {\n    inputTmp[1](content);\n  }, []);\n\n  function onChangeHandler(content) {\n    setContent(content);\n  }\n\n  function clickHandlerSerialize(event) {\n    inputTmp[1](content);\n    console.log(\"serialize\");\n    console.log(content);\n    console.log(inputTmp[0]);\n  }\n\n  function clickHandlerDeserialize(event) {\n    setContent(inputTmp[0]);\n    console.log(\"deserialized \");\n    console.log(content);\n  }\n\n  function onBlur(content) {\n    console.log(\"this is onBlur\");\n    setContent(content);\n  }\n\n  function inputEventHandler(event) {\n    inputTmp[1](event.target.value);\n    console.log(\"input handler in textarea\");\n    console.log(inputTmp[0]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Editors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Start editing to see some magic happen!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(JoditEditor, {\n      ref: editor,\n      value: content,\n      config: config,\n      onBlur: newContent => onBlur(newContent),\n      onChange: newContent => {\n        onChangeHandler(newContent);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: event => clickHandlerSerialize(event),\n      children: \"serialize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"    \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: event => clickHandlerDeserialize(event),\n      children: \"deserialize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n      state: inputTmp[0],\n      value: inputTmp[0],\n      onChange: value => inputEventHandler(value),\n      style: {\n        height: 'calc(22vh)',\n        minHeight: 'calc(19.8vh)',\n        maxHeight: 'calc(50vh)',\n        width: 'calc(80vh)'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(JoditApp, \"cpnjJ6DoGU7TC4rQ5G3zJ1i8fdY=\");\n\n_c2 = JoditApp;\nReactDOM.render( /*#__PURE__*/_jsxDEV(JoditDemo, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 84,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"JoditDemo\");\n$RefreshReg$(_c2, \"JoditApp\");","map":{"version":3,"sources":["/Users/aladdin/Documents/richtext-editor-demo/src/views/jodit/jodit.js"],"names":["React","useState","useRef","useEffect","JoditEditor","Input","Divider","ReactDOM","JoditDemo","TextArea","JoditApp","editor","content","setContent","config","readonly","height","inputTmp","onChangeHandler","clickHandlerSerialize","event","console","log","clickHandlerDeserialize","onBlur","inputEventHandler","target","value","newContent","minHeight","maxHeight","width","render","document","getElementById"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { useState, useRef,useEffect } from \"react\";\nimport JoditEditor from \"jodit-react\";\nimport {Input,Divider} from 'antd';\nimport ReactDOM from \"react-dom\";\n//import {debounce} from \"./baidu\";\n\nfunction JoditDemo(){\n    return <div>\n        <label>Hello, this is Jodit!</label>\n        <JoditApp />\n    </div>;\n}\nconst { TextArea } = Input;\n\nfunction JoditApp() {\n    const editor = useRef(null);\n    const [content, setContent] = useState(\"\");\n    const config = {\n        readonly: false,\n        height: 400\n    };\n    const inputTmp = useState('');\n    //load only once.\n    useEffect(() => {\n        inputTmp[1](content);\n    },[]);\n\n\n    function onChangeHandler(content){\n        setContent(content);\n    }\n\n    function clickHandlerSerialize(event){\n        inputTmp[1](content);\n        console.log(\"serialize\")\n        console.log(content);\n        console.log(inputTmp[0]);\n    }\n\n    function clickHandlerDeserialize(event){\n        setContent(inputTmp[0]);\n        console.log(\"deserialized \");\n        console.log(content);\n    }\n\n    function onBlur(content){\n        console.log(\"this is onBlur\")\n        setContent(content);\n    }\n\n    function inputEventHandler(event){\n        inputTmp[1](event.target.value);\n        console.log(\"input handler in textarea\");\n        console.log(inputTmp[0]);\n    }\n\n    return (\n        <div >\n            <h1>React Editors</h1>\n            <h2>Start editing to see some magic happen!</h2>\n            <JoditEditor\n                ref={editor}\n                value={content}\n                config={config}\n                onBlur={newContent => onBlur(newContent)}\n                onChange={(newContent) => {onChangeHandler(newContent)}}\n            />\n            <button onClick={event=>clickHandlerSerialize(event)}>serialize</button>\n            <label>    </label>\n            <button onClick={event=>clickHandlerDeserialize(event)}>deserialize</button>\n            <br></br>\n            <TextArea\n                state = {inputTmp[0]}\n                value = {inputTmp[0]}\n                onChange={(value)=>inputEventHandler(value)}\n                style={{height: 'calc(22vh)', minHeight: 'calc(19.8vh)',maxHeight:'calc(50vh)',width:'calc(80vh)'}}\n            />\n        </div>\n    );\n}\n\nReactDOM.render(\n    <JoditDemo />,\n    document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}