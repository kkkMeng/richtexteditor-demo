{"ast":null,"code":"var _jsxFileName = \"/Users/aladdin/Documents/richtext-editor-demo/src/views/jodit/jodit.js\";\n\n/* eslint-disable */\n\n/*\nimport React, { useState, useRef,useEffect } from \"react\";\nimport JoditEditor from \"jodit-react\";\nimport {Input,Divider} from 'antd';\nimport ReactDOM from \"react-dom\";\n\nfunction JoditDemo(){\n    return <div>\n        <label>Hello, this is Jodit!</label>\n        <JoditApp />\n    </div>;\n}\nconst { TextArea } = Input;\n*/\n\n/*\nfunction JoditApp() {\n    const editor = useRef(null);\n    const [content, setContent] = useState(\"\");\n    const config = {\n        readonly: false,\n        height: 400\n    };\n    const tmp = useState('');\n    const inputTmp = useState('');\n    //load only once.\n    useEffect(() => {\n        tmp[1](content);\n        inputTmp[1](content);\n    },[]);\n\n\n    function onChangeHandler(content){\n        const JSONcontent = JSON.stringify(content)\n        console.log(\"content:\");\n        console.log(content);\n        console.log(\"JSONcontent:\");\n        console.log(JSONcontent);\n    }\n\n    function clickHandler(event){\n        tmp[1](content);\n        inputTmp[1](content);\n    }\n\n    function clickHandlerDe(event){\n        setContent(inputTmp[0]);\n    }\n\n    function onBlur(content){\n        setContent(content);\n    }\n\n    function inputEventHandler(event){\n        inputTmp[1](event.target.value);\n        console.log(\"input handler\");\n        console.log(inputTmp[0]);\n    }\n\n    return (\n        <div >\n            <h1>React Editors</h1>\n            <h2>Start editing to see some magic happen!</h2>\n            <JoditEditor\n                ref={editor}\n                value={content}\n                config={config}\n                onBlur={newContent => onBlur(newContent)}\n                onChange={(newContent) => {onChangeHandler(newContent)}}\n            />\n            <button onClick={event=>clickHandler(event)}>serialize</button>\n            <label>    </label>\n            <button onClick={event=>clickHandlerDe(event)}>deserialize</button>\n            <br></br>\n            {/*<textarea rows=\"20\" cols=\"100\" value={tmp[0]}/><br></br>*/\n//}\n\n/*\n            <TextArea\n                state = {inputTmp[0]}\n                value = {inputTmp[0]}\n                onChange={(value)=>inputEventHandler(value)}\n                style={{height: 'calc(22vh)', minHeight: 'calc(19.8vh)',maxHeight:'calc(50vh)',width:'calc(80vh)'}}\n            />\n        </div>\n    )\n}\n\n\nReactDOM.render(\n    <JoditDemo />,\n    document.getElementById('root')\n);\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"jodit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n    href: \"../demo.html\",\n    children: \"jodit editor demo~\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 100,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/aladdin/Documents/richtext-editor-demo/src/views/jodit/jodit.js"],"names":["React","ReactDOM","render","document","getElementById"],"mappings":";;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAyE;;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEAA,QAAQ,CAACC,MAAT,eACI;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AAAG,IAAA,IAAI,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALJ","sourcesContent":["\n/* eslint-disable */\n/*\nimport React, { useState, useRef,useEffect } from \"react\";\nimport JoditEditor from \"jodit-react\";\nimport {Input,Divider} from 'antd';\nimport ReactDOM from \"react-dom\";\n\nfunction JoditDemo(){\n    return <div>\n        <label>Hello, this is Jodit!</label>\n        <JoditApp />\n    </div>;\n}\nconst { TextArea } = Input;\n*/\n/*\nfunction JoditApp() {\n    const editor = useRef(null);\n    const [content, setContent] = useState(\"\");\n    const config = {\n        readonly: false,\n        height: 400\n    };\n    const tmp = useState('');\n    const inputTmp = useState('');\n    //load only once.\n    useEffect(() => {\n        tmp[1](content);\n        inputTmp[1](content);\n    },[]);\n\n\n    function onChangeHandler(content){\n        const JSONcontent = JSON.stringify(content)\n        console.log(\"content:\");\n        console.log(content);\n        console.log(\"JSONcontent:\");\n        console.log(JSONcontent);\n    }\n\n    function clickHandler(event){\n        tmp[1](content);\n        inputTmp[1](content);\n    }\n\n    function clickHandlerDe(event){\n        setContent(inputTmp[0]);\n    }\n\n    function onBlur(content){\n        setContent(content);\n    }\n\n    function inputEventHandler(event){\n        inputTmp[1](event.target.value);\n        console.log(\"input handler\");\n        console.log(inputTmp[0]);\n    }\n\n    return (\n        <div >\n            <h1>React Editors</h1>\n            <h2>Start editing to see some magic happen!</h2>\n            <JoditEditor\n                ref={editor}\n                value={content}\n                config={config}\n                onBlur={newContent => onBlur(newContent)}\n                onChange={(newContent) => {onChangeHandler(newContent)}}\n            />\n            <button onClick={event=>clickHandler(event)}>serialize</button>\n            <label>    </label>\n            <button onClick={event=>clickHandlerDe(event)}>deserialize</button>\n            <br></br>\n            {/*<textarea rows=\"20\" cols=\"100\" value={tmp[0]}/><br></br>*///}\n/*\n            <TextArea\n                state = {inputTmp[0]}\n                value = {inputTmp[0]}\n                onChange={(value)=>inputEventHandler(value)}\n                style={{height: 'calc(22vh)', minHeight: 'calc(19.8vh)',maxHeight:'calc(50vh)',width:'calc(80vh)'}}\n            />\n        </div>\n    )\n}\n\n\nReactDOM.render(\n    <JoditDemo />,\n    document.getElementById('root')\n);\n*/\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n    <div>\n        <h1>jodit</h1>\n        <a href=\"../demo.html\">jodit editor demo~</a>\n    </div>,\n    document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}