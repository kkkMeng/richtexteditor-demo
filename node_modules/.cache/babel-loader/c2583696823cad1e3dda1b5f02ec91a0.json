{"ast":null,"code":"var _jsxFileName = \"/Users/aladdin/Documents/richtext-editor-demo/src/JoditDemo.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState, useRef, useEffect } from \"react\";\nimport JoditEditor from \"jodit-react\";\nimport { Input, Divider } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function JoditDemo() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Hello, this is Jodit!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(JoditApp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n}\n_c = JoditDemo;\nexport function JoditApp() {\n  _s();\n\n  const editor = useRef(null);\n  const [content, setContent] = useState(\"<p>Start writ<strong>ing. Hello~</strong>~~~~</p><p><br></p>\\n<table style=\\\"width: 100%;\\\"><tbody>\\n<tr>\\n\\t<td>ok</td>\\n\\t<td>nia</td>\\n\\t<td>Jones</td></tr>\\n<tr>\\n\\t<td>hello</td>\\n\\t<td>fine</td>\\n\\t<td>great</td></tr>\\n<tr>\\n\\t<td><br></td>\\n\\t<td><br></td>\\n\\t<td><br></td></tr></tbody></table>\");\n  const config = {\n    readonly: false,\n    height: 400\n  };\n  const tmp = useState(''); //load only once.\n\n  useEffect(() => {\n    tmp[1](content);\n  }, []);\n\n  function onChangeHandler(content) {\n    const JSONcontent = JSON.stringify(content);\n    console.log(\"content:\");\n    console.log(content);\n    console.log(\"JSONcontent:\");\n    console.log(JSONcontent);\n  }\n\n  function log(content) {\n    console.log(\"this is log content:\");\n    console.log(content);\n    console.log(tmp[0]);\n  }\n\n  function onBlur(content) {\n    console.log(\"onBlur\");\n    console.log(content);\n    setContent(content);\n    tmp[1](content);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Editors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Start editing to see some magic happen!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(JoditEditor, {\n      ref: editor,\n      value: content,\n      config: config,\n      onBlur: newContent => onBlur(newContent),\n      onChange: newContent => {\n        onChangeHandler(newContent);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: content => log(content),\n      children: \"serialize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 71\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      config: config,\n      value: tmp[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(JoditApp, \"n90kEAPjZ32IYVbQSZCyNSZnzRQ=\");\n\n_c2 = JoditApp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"JoditDemo\");\n$RefreshReg$(_c2, \"JoditApp\");","map":{"version":3,"sources":["/Users/aladdin/Documents/richtext-editor-demo/src/JoditDemo.js"],"names":["React","useState","useRef","useEffect","JoditEditor","Input","Divider","JoditDemo","JoditApp","editor","content","setContent","config","readonly","height","tmp","onChangeHandler","JSONcontent","JSON","stringify","console","log","onBlur","newContent"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAiCC,SAAjC,QAAkD,OAAlD;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAAQC,KAAR,EAAcC,OAAd,QAA4B,MAA5B;;AAEA,OAAO,SAASC,SAAT,GAAoB;AACvB,sBAAO;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH;KALeA,S;AAOhB,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACvB,QAAMC,MAAM,GAAGP,MAAM,CAAC,IAAD,CAArB;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,+SAAD,CAAtC;AACA,QAAMW,MAAM,GAAG;AACXC,IAAAA,QAAQ,EAAE,KADC;AAEXC,IAAAA,MAAM,EAAE;AAFG,GAAf;AAIA,QAAMC,GAAG,GAAGd,QAAQ,CAAC,EAAD,CAApB,CAPuB,CAQvB;;AACAE,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,GAAG,CAAC,CAAD,CAAH,CAAOL,OAAP;AACH,GAFQ,EAEP,EAFO,CAAT;;AAKA,WAASM,eAAT,CAAyBN,OAAzB,EAAiC;AAC7B,UAAMO,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAeT,OAAf,CAApB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACH;;AAED,WAASI,GAAT,CAAaX,OAAb,EAAqB;AACjBU,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAAC,CAAD,CAAf;AACH;;AAED,WAASO,MAAT,CAAgBZ,OAAhB,EAAwB;AACpBU,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACAC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAK,IAAAA,GAAG,CAAC,CAAD,CAAH,CAAOL,OAAP;AACH;;AAED,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,WAAD;AACI,MAAA,GAAG,EAAED,MADT;AAEI,MAAA,KAAK,EAAEC,OAFX;AAGI,MAAA,MAAM,EAAEE,MAHZ;AAII,MAAA,MAAM,EAAEW,UAAU,IAAID,MAAM,CAACC,UAAD,CAJhC;AAKI,MAAA,QAAQ,EAAGA,UAAD,IAAgB;AAACP,QAAAA,eAAe,CAACO,UAAD,CAAf;AAA4B;AAL3D;AAAA;AAAA;AAAA;AAAA,YAHJ,eAUI;AAAQ,MAAA,OAAO,EAAEb,OAAO,IAAEW,GAAG,CAACX,OAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAU8D;AAAA;AAAA;AAAA;AAAA,YAV9D,eAWI;AAAU,MAAA,MAAM,EAAEE,MAAlB;AAA0B,MAAA,KAAK,EAAEG,GAAG,CAAC,CAAD;AAApC;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAlDeP,Q;;MAAAA,Q","sourcesContent":["/* eslint-disable */\nimport React, { useState, useRef,useEffect } from \"react\";\nimport JoditEditor from \"jodit-react\";\nimport {Input,Divider} from 'antd';\n\nexport function JoditDemo(){\n    return <div>\n        <label>Hello, this is Jodit!</label>\n        <JoditApp />\n    </div>;\n}\n\nexport function JoditApp() {\n    const editor = useRef(null);\n    const [content, setContent] = useState(\"<p>Start writ<strong>ing. Hello~</strong>~~~~</p><p><br></p>\\n<table style=\\\"width: 100%;\\\"><tbody>\\n<tr>\\n\\t<td>ok</td>\\n\\t<td>nia</td>\\n\\t<td>Jones</td></tr>\\n<tr>\\n\\t<td>hello</td>\\n\\t<td>fine</td>\\n\\t<td>great</td></tr>\\n<tr>\\n\\t<td><br></td>\\n\\t<td><br></td>\\n\\t<td><br></td></tr></tbody></table>\");\n    const config = {\n        readonly: false,\n        height: 400\n    };\n    const tmp = useState('');\n    //load only once.\n    useEffect(() => {\n        tmp[1](content);\n    },[]);\n\n\n    function onChangeHandler(content){\n        const JSONcontent = JSON.stringify(content)\n        console.log(\"content:\");\n        console.log(content);\n        console.log(\"JSONcontent:\");\n        console.log(JSONcontent);\n    }\n\n    function log(content){\n        console.log(\"this is log content:\");\n        console.log(content);\n        console.log(tmp[0]);\n    }\n\n    function onBlur(content){\n        console.log(\"onBlur\");\n        console.log(content)\n        setContent(content);\n        tmp[1](content);\n    }\n\n    return (\n        <div >\n            <h1>React Editors</h1>\n            <h2>Start editing to see some magic happen!</h2>\n            <JoditEditor\n                ref={editor}\n                value={content}\n                config={config}\n                onBlur={newContent => onBlur(newContent)}\n                onChange={(newContent) => {onChangeHandler(newContent)}}\n            />\n            <button onClick={content=>log(content)}>serialize</button><br></br>\n            <textarea config={config} value={tmp[0]}/>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}