{"ast":null,"code":"var _jsxFileName = \"/Users/aladdin/Documents/richtext-editor-demo/src/views/jodit/jodit.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport JoditEditor from \"jodit-react\";\nimport { Input, Divider } from 'antd';\nimport ReactDOM from \"react-dom\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction JoditDemo() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"index\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"../jodit.html\",\n      children: \"jodit editor demo~\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 56\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"../draft.html\",\n      children: \"draft editor demo~\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 56\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Jodit React Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(JoditApp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n} //TODO:\n//bug1： deserialize之后，如果不对editor进行onBlur,serialize无法更新textContent...\n//原因：raw -> html依靠editor渲染。目前deserialize无法控制editor组件渲染。目前组件渲染只能通过setContent，这个在onBlur里。\n//nonetheless... draft里面的textarea就很正常。。。。\n//bug2：textarea每次input都会触发onChange，每个字母都会自动刷新组件，跳转到最上方...\n//const { TextArea } = Input;\n\n\n_c = JoditDemo;\n\nfunction JoditApp() {\n  _s();\n\n  const editor = useRef(null);\n  const [content, setContent] = useState(\"\");\n  const config = {\n    readonly: false,\n    height: 400\n  };\n  const textContent = useState(''); //load only once.\n\n  useEffect(() => {\n    textContent[1](content);\n  }, []);\n\n  function onChangeHandler(content) {//setContent(content);\n  }\n\n  function serializeHandler(event) {\n    textContent[1](content);\n    console.log(\"serialize\");\n  }\n\n  function deserializeHandler(event) {\n    setContent(textContent[0]);\n    console.log(\"deserialized \");\n  }\n\n  function onBlur(content) {\n    console.log(\"this is onBlur in jodit editor\");\n    setContent(content);\n  }\n\n  function inputChangeHandler(event) {\n    textContent[1](event.target.value);\n    console.log(\"input handler in textarea\");\n  }\n\n  function inputBlurHandler(event) {\n    //textContent[1](event.target.value);\n    console.log(\"this is input blur handler\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(JoditEditor, {\n      ref: editor,\n      value: content,\n      config: config,\n      onBlur: newContent => onBlur(newContent),\n      onChange: newContent => {\n        onChangeHandler(newContent);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"  \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0   \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: event => serializeHandler(event),\n      children: \"serialize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"  \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: event => deserializeHandler(event),\n      children: \"deserialize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"rdw-storybook-textarea\",\n      state: textContent[0],\n      value: textContent[0],\n      onChange: event => inputChangeHandler(event),\n      style: {\n        height: 'calc(22vh)',\n        minHeight: 'calc(19.8vh)',\n        maxHeight: 'calc(50vh)',\n        width: 'calc(80vh)'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(JoditApp, \"WAJ0MDsNKJ9Rj+jw0FJMu/Bh7Ag=\");\n\n_c2 = JoditApp;\nReactDOM.render( /*#__PURE__*/_jsxDEV(JoditDemo, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 102,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"JoditDemo\");\n$RefreshReg$(_c2, \"JoditApp\");","map":{"version":3,"sources":["/Users/aladdin/Documents/richtext-editor-demo/src/views/jodit/jodit.js"],"names":["React","useState","useRef","useEffect","useCallback","JoditEditor","Input","Divider","ReactDOM","JoditDemo","JoditApp","editor","content","setContent","config","readonly","height","textContent","onChangeHandler","serializeHandler","event","console","log","deserializeHandler","onBlur","inputChangeHandler","target","value","inputBlurHandler","newContent","minHeight","maxHeight","width","render","document","getElementById"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { useState, useRef,useEffect, useCallback } from \"react\";\nimport JoditEditor from \"jodit-react\";\nimport {Input,Divider} from 'antd';\nimport ReactDOM from \"react-dom\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nfunction JoditDemo(){\n    return <div>\n        <h2>index</h2>\n        <a href=\"../jodit.html\">jodit editor demo~</a> <br></br>\n        <a href=\"../draft.html\">draft editor demo~</a> <br></br>\n        <h3>Jodit React Editor</h3>\n        <JoditApp />\n    </div>;\n}\n\n//TODO:\n//bug1： deserialize之后，如果不对editor进行onBlur,serialize无法更新textContent...\n//原因：raw -> html依靠editor渲染。目前deserialize无法控制editor组件渲染。目前组件渲染只能通过setContent，这个在onBlur里。\n//nonetheless... draft里面的textarea就很正常。。。。\n//bug2：textarea每次input都会触发onChange，每个字母都会自动刷新组件，跳转到最上方...\n\n//const { TextArea } = Input;\nfunction JoditApp() {\n    const editor = useRef(null);\n    const [content, setContent] = useState(\"\");\n    const config = {\n        readonly: false,\n        height: 400\n    };\n    const textContent = useState('');\n    //load only once.\n    useEffect(() => {\n        textContent[1](content);\n    },[]);\n\n    function onChangeHandler(content){\n        //setContent(content);\n    }\n\n    function serializeHandler(event){\n        textContent[1](content);\n        console.log(\"serialize\")\n    }\n\n    function deserializeHandler(event){\n        setContent(textContent[0]);\n        console.log(\"deserialized \");\n    }\n\n    function onBlur(content){\n        console.log(\"this is onBlur in jodit editor\")\n        setContent(content);\n    }\n\n    function inputChangeHandler(event){\n        textContent[1](event.target.value);\n        console.log(\"input handler in textarea\");\n    }\n\n    function inputBlurHandler(event){\n        //textContent[1](event.target.value);\n        console.log(\"this is input blur handler\");\n    }\n\n    return (\n        <div >\n            <JoditEditor\n                ref={editor}\n                value={content}\n                config={config}\n                onBlur={newContent => onBlur(newContent)}\n                onChange={(newContent) => {onChangeHandler(newContent)}}\n            />\n            <br></br>\n            <label>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   </label>\n            <button onClick={event=>serializeHandler(event)}>serialize</button>\n            <label>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </label>\n            <button onClick={event=>deserializeHandler(event)}>deserialize</button>\n            <br></br><br></br>\n            {/*<TextArea\n                state={textContent[0]}\n                value={textContent[0]}\n                onBlur={newContent => inputBlurHandler(newContent)}\n                onChange={(value) => inputChangeHandler(value)}\n                style={{height: 'calc(22vh)', minHeight: 'calc(19.8vh)', maxHeight: 'calc(50vh)', width: 'calc(80vh)'}}\n            /> <br></br><br></br><br></br>*/}\n\n            <textarea\n                className=\"rdw-storybook-textarea\"\n                state = {textContent[0]}\n                value = {textContent[0]}\n                onChange={(event)=>inputChangeHandler(event)}\n                style={{height: 'calc(22vh)', minHeight: 'calc(19.8vh)', maxHeight: 'calc(50vh)', width: 'calc(80vh)'}}\n            />\n        </div>\n    );\n}\n\nReactDOM.render(\n    <JoditDemo />,\n    document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}